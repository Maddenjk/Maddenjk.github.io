{"version":3,"sources":["DiceRollerD10.tsx","DiceRollerD20.tsx","DiceRoller.tsx","Page.tsx","TopBar.tsx","App.tsx","index.tsx"],"names":["DiceRollerD10","clearResult","$","text","react_default","a","createElement","className","type","value","id","htmlFor","onFocus","aria-label","onClick","event","undefined","val","_$$val","_$$val2","MaxRoll","Number","parseInt","toString","diceCount","modAmount","modArray","split","values","sucesses","extraDiceCount","numberToBeat","index","Math","floor","random","is","push","concat","join","rollForSuccesses","disabled","rows","DiceRollerD20","diceTypeArray","Fragment","diceArray","forEach","diceType","diceTypeLabel","textLabel","AmountLabel","ModLabel","GenerateDice","diceRollTotal","console","log","rollForTotal","DiceRoller","_React$useState","React","useState","src_DiceRollerD10","_React$useState2","Object","slicedToArray","roller","setRoller","chooseRollerCheck","src_DiceRollerD20","name","defaultChecked","onChange","Page","src_DiceRoller","TopBar","Navbar","bg","variant","Container","Brand","href","Nav","Link","App","src_TopBar","src_Page","root","document","getElementById","ReactDOM","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.b170f3a2.chunk.js","sourcesContent":["import React from 'react';\nimport $ from 'jquery';\n\nfunction DiceRollerD10() {\n\n  function RollDiceButtonClick(event: any) {\n    if ($(`#Amount`) !== undefined && $(`#Amount`).val() !== \"\" &&\n      $(`#MaxRoll`) !== undefined && $(`#MaxRoll`).val() !== \"\") {\n      let MaxRoll = Number.parseInt(($(`#MaxRoll`).val()?.toString() || \"0\"));\n      let diceCount = Number.parseInt(($(`#Amount`).val()?.toString() || \"0\"));\n      let modAmount = $(`#Mod`).val() || \"\";\n      let modArray: string[] = []\n      if (modAmount) {\n        modArray = modAmount.toString().split(',')\n      }\n      rollForSuccesses(MaxRoll, diceCount, modArray);\n    }\n  }\n\n  function rollForSuccesses(MaxRoll: number, diceCount: number, modArray: string[]) {\n    let values = []\n    let sucesses = 0;\n    let extraDiceCount = 0\n\n    let numberToBeat = $(`#NumberToBeat`).val() || 0;\n    for (let index = 0; index < diceCount; index++) {\n      let value = Math.floor(Math.random() * MaxRoll);\n      value += 1\n      if (value === 1 && $(\"#1RemovesSuccess\").is(':checked')) {\n        sucesses -= 1;\n      }\n      if (value >= MaxRoll) {\n        if ($(\"#explodeMax\").is(':checked')) {\n          extraDiceCount += 1;\n        }\n        if ($(\"#MaxCount2\").is(':checked')) {\n          sucesses += 1;\n        }\n      }\n      value += +modArray[index] || 0;\n      if (value >= numberToBeat) {\n        sucesses += 1;\n      }\n\n      values.push(value);\n    }\n\n    for (let index = 0; index < extraDiceCount; index++) {\n      let value = Math.floor(Math.random() * +MaxRoll);\n      value += 1\n      if (value >= MaxRoll) {\n        if ($(\"#explodeMax\").is(':checked')) {\n          extraDiceCount += 1;\n        }\n        if ($(\"#MaxCount2\").is(':checked')) {\n          sucesses += 1;\n        }\n      }\n      value += +modArray[index] || 0;\n      if (value >= numberToBeat) {\n        sucesses += 1;\n      }\n\n      values.push(value);\n    }\n\n    if ($(\"#result\").text()) {\n      $(\"#result\").text($(\"#result\").text() + \"\\n\")\n    }\n    $(\"#result\").text($(\"#result\").text() + `D${MaxRoll}: ` + values.join(\", \"))\n    $(\"#result\").text($(\"#result\").text() + \"\\nSuccesses = \" + sucesses)\n    return sucesses;\n  }\n\n  const clearResult = () => {\n    $(\"#result\").text(\"\")\n  }\n\n  const clear = () => {\n    $(\"#result\").text(\"\")\n    $(`#Amount`).val(\"\")\n    $(`#Mod`).val(\"\")\n    $(`#NumberToBeat`).val(\"\")\n    $(`#MaxRoll`).val(\"\")\n  }\n\n  return (\n    <div className=\"form\">\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"explodeMax\" />\n        <label className=\"form-check-label\" htmlFor=\"explodeMax\">\n          Explode Dice When Max Dice Roll Is Hit\n        </label>\n      </div>\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"1RemovesSuccess\" />\n        <label className=\"form-check-label\" htmlFor=\"1RemovesSuccess\">\n          Roll of 1 Removes a Success, unless on exploded dice\n        </label>\n      </div>\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"checkbox\" value=\"\" id=\"MaxCount2\" />\n        <label className=\"form-check-label\" htmlFor=\"MaxCount2\">\n          Max Rolls Counts as Two Successes\n        </label>\n      </div>\n      <div className=\"row\">\n        <div className=\"col-2\">\n          <label className=\"form-label\" htmlFor='NumberToBeat'>Number to Beat</label>\n          <input type=\"text\" onFocus={clearResult} className=\"form-control\"\n            id=\"NumberToBeat\" aria-label=\"NumberToBeat\" />\n        </div>\n        <div className=\"col-1\">\n          <label className=\"form-label\" htmlFor='MaxRoll'>Max Roll</label>\n          <input type=\"text\" onFocus={clearResult} className=\"form-control\"\n            id=\"MaxRoll\" aria-label=\"MaxRoll\" />\n        </div>\n        <div className=\"col-2\">\n          <label className=\"form-label\" htmlFor='Amount'>Amount of Dice</label>\n          <input type=\"text\" onFocus={clearResult} className=\"form-control\"\n            id=\"Amount\" aria-label=\"Amount\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n        <label className=\"form-label\" htmlFor='Mod'>Modifiers, comma seperated</label>\n          <input type=\"text\" onFocus={clearResult} className=\"form-control\"\n            id=\"Mod\" aria-label=\"Mod\" />\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <div className=\"btn-group form\">\n            <button type=\"button\" onClick={RollDiceButtonClick}>Roll</button>\n            <div className=\"pull-right\">\n              <button type=\"button\" onClick={clear}>Clear</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <div className=\"col\">\n          <label htmlFor='result'>Result</label>\n          <textarea className=\"form-control\" disabled={true} rows={8} id=\"result\"></textarea>\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\n\nexport default DiceRollerD10;\n","import React from 'react';\nimport $ from 'jquery';\n\nfunction DiceRollerD20() {\n\n  let diceTypeArray = [\"2\", \"4\", \"6\", \"8\", \"10\", \"12\", \"20\", \"100\"]\n\n  function RollDiceButtonClick(event: any) {\n    diceTypeArray.forEach(diceType => {\n      if ($(`#D${diceType}Amount`) !== undefined && $(`#D${diceType}Amount`).val() !== \"\") {\n        let diceCount = Number.parseInt(($(`#D${diceType}Amount`).val()?.toString() || \"0\"));\n        let modAmount = $(`#D${diceType}Mod`).val() || \"\";\n        let modArray: string[] = []\n        if (modAmount){\n          modArray = modAmount.toString().split(',')\n        }\n           rollForTotal(diceType, diceCount, modArray);\n      }\n    })\n  }\n\n  function rollForTotal(diceType: string, diceCount: number, modArray: string[]) {\n    let values = []\n    let diceRollTotal = 0;\n    for (let index = 0; index < diceCount; index++) {\n      let value = Math.floor(Math.random() * +diceType);\n      value += 1\n      value += +modArray[index] || 0;\n      diceRollTotal += value;\n      values.push(value);\n    }\n    console.log(values)\n    if ($(\"#result\").text()) {\n      $(\"#result\").text($(\"#result\").text() + \"\\n\")\n    }\n    $(\"#result\").text($(\"#result\").text() + ` D${diceType} ` + values.toString())\n    $(\"#result\").text($(\"#result\").text() + \"\\nTotal = \" + diceRollTotal)\n    return diceRollTotal;\n  }\n  \n  const clearResult = () => {\n    $(\"#result\").text(\"\")\n  }\n\n  const clear = () => {\n    $(\"#result\").text(\"\")\n    diceTypeArray.forEach(diceType => {\n      $(`#D${diceType}Amount`).val(\"\")\n      $(`#D${diceType}Mod`).val(\"\")\n    })\n  }\n\n  const GenerateDice = () => {\n    let diceArray: any = []\n    diceTypeArray.forEach(diceType => {\n      let diceTypeLabel = `D${diceType}`\n      let textLabel = `D${diceType}Text`;\n      let AmountLabel = `D${diceType}Amount`;\n      let ModLabel = `D${diceType}Mod`;\n      diceArray.push(\n        <div className=\"row\">\n          <div className=\"col-1\">\n            <p aria-label={textLabel} id={textLabel}>{diceTypeLabel}</p>\n          </div>\n          <div className=\"col-2\">\n            <input type=\"text\" onFocus={clearResult} className=\"form-control\" \n            id={AmountLabel} aria-label={AmountLabel} />\n          </div>\n          <div className=\"col-9\">\n            <input type=\"text\" onFocus={clearResult} className=\"form-control\" \n            id={ModLabel} aria-label={ModLabel} />\n          </div>\n        </div>)\n    })\n    return diceArray\n  }\n\n  return (\n    <div>\n      <div className=\"row\">\n        <p className=\"col-1\">Type</p>\n        <p className=\"col-2\">Amount of Dice</p>\n        <p className=\"col-3\">Modifiers (comma seperated)</p>\n      </div>\n      <>{GenerateDice() || null}</>\n      <div className=\"row\">\n        <div className=\"col-1\">\n          <div className=\"btn-group\">\n            <button type=\"button\" onClick={RollDiceButtonClick}>Roll</button>\n            <div className=\"pull-right\">\n              <button type=\"button\" onClick={clear}>Clear</button>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"row\">\n        <label htmlFor='result'>Result</label>\n        <textarea className=\"form-control\" disabled={true} rows={8} id=\"result\"></textarea>\n      </div>\n      {/* TODO Add Custom die logic here */}\n    </div>\n  );\n}\n\nexport default DiceRollerD20;\n","import React from 'react';\nimport $ from 'jquery';\nimport DiceRollerD10 from './DiceRollerD10';\nimport DiceRollerD20 from './DiceRollerD20';\n\nfunction DiceRoller() {\n\n  const [roller, setRoller] = React.useState(<DiceRollerD10 />)\n\n  const chooseRollerCheck = () => {\n    if ($(\"#DicePoolSystem\").is(':checked')) {\n      setRoller(<DiceRollerD10 />)\n    }\n    if ($(\"#d20System\").is(':checked')) {\n      setRoller(<DiceRollerD20 />)\n    }\n  }\n\n  return (\n    <>\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"radio\" name=\"RollerChoice\" defaultChecked\n          id=\"DicePoolSystem\" onChange={chooseRollerCheck} />\n        <label className=\"form-check-label\" htmlFor=\"DicePoolSystem\">\n          Default radio\n        </label>\n      </div>\n      <div className=\"form-check\">\n        <input className=\"form-check-input\" type=\"radio\" name=\"RollerChoice\"\n          id=\"d20System\" onChange={chooseRollerCheck} />\n        <label className=\"form-check-label\" htmlFor=\"d20System\">\n          Default checked radio\n        </label>\n      </div>\n      {roller}\n    </>\n  );\n}\n\nexport default DiceRoller;\n","import React from 'react';\nimport DiceRoller from './DiceRoller';\n\nfunction Page() {\n  return (\n    <div className=\"Page p-4\">\n      <DiceRoller></DiceRoller>\n    </div>\n  );\n}\n\nexport default Page;\n","import React from 'react';\nimport Navbar from 'react-bootstrap/Navbar';\nimport Nav from 'react-bootstrap/Nav';\nimport Container from 'react-bootstrap/Container';\n\nfunction TopBar() {\n  return (\n    <div>\n      <Navbar bg=\"dark\" variant=\"dark\">\n        <Container>\n          <Navbar.Brand href=\"#home\">Navbar</Navbar.Brand>\n          <Nav className=\"me-auto\">\n            <Nav.Link href=\"#home\">Home</Nav.Link>\n            <Nav.Link href=\"./DiceRoller\">Dice Roller</Nav.Link>\n          </Nav>\n        </Container>\n      </Navbar>\n    </div>\n  );\n}\n\nexport default TopBar;\n","import React from 'react';\nimport Page from './Page';\nimport TopBar from './TopBar'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopBar></TopBar>\n      <Page></Page>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap';\nlet root = document.getElementById('root');\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>, root)\n"],"sourceRoot":""}